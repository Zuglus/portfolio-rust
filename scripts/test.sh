#!/bin/bash

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m'

ERRORS=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ Rust –∫–æ–¥–∞
echo "ü¶Ä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ Rust..."
if cargo check; then
    echo -e "${GREEN}‚úÖ Rust –∫–æ–¥ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ Rust${NC}"
    ERRORS=$((ERRORS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ WASM target
echo "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ WASM target..."
if cargo check --target wasm32-unknown-unknown; then
    echo -e "${GREEN}‚úÖ WASM target –ø—Ä–æ–≤–µ—Ä–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ WASM target${NC}"
    ERRORS=$((ERRORS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
REQUIRED_FILES=(
    "Cargo.toml"
    "index.html"
    "src/main.rs"
    "src/app.rs"
    "src/lib.rs"
    "style/main.scss"
    "tailwind.config.js"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ $file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        ERRORS=$((ERRORS + 1))
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TailwindCSS
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ TailwindCSS..."
if npx tailwindcss -i ./style/main.scss -o ./style/output.css; then
    echo -e "${GREEN}‚úÖ TailwindCSS —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ TailwindCSS${NC}"
    ERRORS=$((ERRORS + 1))
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
if [ $ERRORS -eq 0 ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—à–∏–±–æ–∫: $ERRORS${NC}"
    exit 1
fi
